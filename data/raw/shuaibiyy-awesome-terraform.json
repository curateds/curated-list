[
  {
    "name": "Hashicorp Terraform Blog",
    "url": "https://www.hashicorp.com/blog/products/terraform"
  },
  {
    "name": "Introduction to Terraform",
    "url": "https://www.terraform.io/intro/"
  },
  {
    "name": "Terraform Documentation",
    "url": "https://www.terraform.io/docs/"
  },
  {
    "name": "Terraform learn",
    "url": "https://learn.hashicorp.com/terraform/"
  },
  {
    "name": "weekly.tf - Terraform Weekly Newsletter",
    "url": "https://weekly.tf",
    "description": "Terraform Weekly Newsletter - Various news in the Terraform world (projects, announcements, discussions)."
  },
  {
    "name": "Complete Terraform documentation as PDF files (Updated nightly)",
    "url": "https://github.com/antonbabenko/terraform-docs-as-pdf"
  },
  {
    "name": "Terraform AWS Modules",
    "url": "https://github.com/terraform-aws-modules"
  },
  {
    "name": "Terraform Bug Tracker",
    "url": "https://github.com/hashicorp/terraform/issues"
  },
  {
    "name": "Terraform Community Modules",
    "url": "https://github.com/terraform-community-modules"
  },
  {
    "name": "Terraform Twitter Community",
    "url": "https://twitter.com/i/communities/1501688565884928007"
  },
  {
    "name": "Terraform Discuss",
    "url": "https://discuss.hashicorp.com/c/terraform-core/27"
  },
  {
    "name": "Terraform Provider/Module Registry",
    "url": "https://registry.terraform.io/"
  },
  {
    "name": "Terraform PDF Doc",
    "url": "https://github.com/dohsimpson/terraform-doc-pdf"
  },
  {
    "name": "Terragrunt Reference Architecture",
    "url": "https://github.com/antonbabenko/terragrunt-reference-architecture"
  },
  {
    "name": "Telegram (Ukrainian speak community)",
    "url": "https://t.me/terraform_ukraine"
  },
  {
    "name": "Telegram (Ukrainian speak community)",
    "url": "https://t.me/terraform_ukraine"
  },
  {
    "name": "Big Little Book On Terraform",
    "url": "https://www.amazon.com/Big-Little-Book-Terraform-Omos-ebook/dp/B07PWYPNX8/"
  },
  {
    "name": "Bootstrapping Microservices with Docker, Kubernetes, and Terraform, Second Editon",
    "url": "https://www.manning.com/books/bootstrapping-microservices-with-docker-kubernetes-and-terraform-second-edition"
  },
  {
    "name": "Deep-Dive Terraform on Azure",
    "url": "https://link.springer.com/book/10.1007/978-1-4842-7328-9"
  },
  {
    "name": "Getting Started with Terraform, 2nd ed.",
    "url": "https://www.amazon.com/Getting-Started-Terraform-production-infrastructure/dp/1788623533/"
  },
  {
    "name": "HashiCorp Infrastructure Automation Certification Guide",
    "url": "https://www.amazon.com/HashiCorp-Infrastructure-Automation-Certification-Guide-ebook/dp/B092KM7LXC/"
  },
  {
    "name": "Infrastructure as Code",
    "url": "http://shop.oreilly.com/product/0636920039297.do"
  },
  {
    "name": "Patterns and Practices for Infrastructure as Code: With examples in Python and Terraform",
    "url": "https://www.manning.com/books/patterns-and-practices-for-infrastructure-as-code"
  },
  {
    "name": "Terraform Best Practices",
    "url": "https://www.terraform-best-practices.com/",
    "description": "open-source ebook"
  },
  {
    "name": "Terraform Cookbook",
    "url": "https://www.amazon.com/Terraform-Cookbook-Efficiently-Infrastructure-platforms/dp/1800207557"
  },
  {
    "name": "Terraform in Action",
    "url": "https://www.manning.com/books/terraform-in-action"
  },
  {
    "name": "Terraform: Up & Running, 3rd ed.",
    "url": "https://www.terraformupandrunning.com/"
  },
  {
    "name": "The Terraform Book",
    "url": "https://terraformbook.com/"
  },
  {
    "name": "IaC starting with Terraform(Korean)",
    "url": "https://product.kyobobook.co.kr/detail/S000202478097"
  },
  {
    "name": "A Comprehensive Guide to Terraform",
    "url": "https://blog.gruntwork.io/a-comprehensive-guide-to-terraform-b3d32832baca#.w9x897ywp",
    "description": "Series of blog posts from the author of \"Terraform: Up & Running\" that guide the reader from beginning with Terraform to using it in the real world."
  },
  {
    "name": "Using Terraform for Cloud Deployments - Part 1",
    "url": "https://dev.to/koenighotze/using-terraform-for-cloud-deployments---part-1",
    "description": "Part 1 - Provisioning an EC2 instance."
  },
  {
    "name": "Hello, world: The Fargate/Terraform tutorial I wish I had",
    "url": "https://section411.com/2019/07/hello-world/",
    "description": "Blog post describing setting up an ECS Fargate cluster from scratch"
  },
  {
    "name": "Terraform Security Guide",
    "url": "https://sysdig.com/blog/terraform-security-best-practices/",
    "description": "Blog post describing security best practices when working with Terraform"
  },
  {
    "name": "Building a SaaS API? Don't Forget Your Terraform Provider",
    "url": "https://www.speakeasyapi.dev/post/build-terraform-providers",
    "description": "Why you should write a terraform provider"
  },
  {
    "name": "Creating custom terraform providers",
    "url": "https://medium.com/@jozmo/creating-custom-terraform-providers-341311823fa2",
    "description": "Guide for creating custom providers."
  },
  {
    "name": "Writing a Terraform provider",
    "url": "https://web.archive.org/web/20220516140659/http://blog.jfabre.net/2017/01/22/writing-terraform-provider/",
    "description": "Guide for creating custom providers."
  },
  {
    "name": "Writing Custom Providers",
    "url": "https://www.terraform.io/docs/extend/writing-custom-providers.html",
    "description": "Official documentation for creating custom providers."
  },
  {
    "name": "Terraform Provider Code generation",
    "url": "https://www.speakeasyapi.dev/docs/create-terraform",
    "description": "Guide to generating a terraform provider from an OpenAPI specification (Vendor Supported)"
  },
  {
    "name": "How To Write OPA for Terraform",
    "url": "https://www.scalr.com/blog/opa-series-part-1-open-policy-agent-and-terraform/",
    "description": "How to use Open Policy Agent to evaluate and enforce policy on your Terraform plans"
  },
  {
    "name": "Deploying Discourse with Terraform",
    "url": "https://web.archive.org/web/20181001135342/http://www.hashicorp.com/blog/deploying-discourse-with-terraform",
    "description": "Shows how Terraform can create a running instance of Discourse on DigitalOcean in one command."
  },
  {
    "name": "Deploying Django to AWS ECS with Terraform",
    "url": "https://testdriven.io/blog/deploying-django-to-ecs-with-terraform/",
    "description": "Looks at how to use Terraform to spin up the required AWS infrastructure for running a Django app on ECS."
  },
  {
    "name": "Easily Deploy A Seneca Microservice to ECS with Wercker and Terraform: Part I",
    "url": "http://chiefy.github.io/easily-deploy-a-seneca-microservice-to-ecs-with-wercker-and-terraform-part-i/",
    "description": "Illustrates how Terraform can be incorporated into a microservice deployment pipeline."
  },
  {
    "name": "Terraform for a Highly Available VPN between AWS and Azure",
    "url": "https://web.archive.org/web/20210616132857/https://deployeveryday.com/2020/04/13/vpn-aws-azure-terraform.html",
    "description": "Terraform code to deploy a highly available VPN between AWS and Azure."
  },
  {
    "name": "Terraforming 1Password",
    "url": "https://blog.agilebits.com/2018/01/25/terraforming-1password/",
    "description": "How 1Password migrated from CloudFormation to Terraform."
  },
  {
    "name": "Tutorial: How to Use Terraform to Deploy OpenStack Workloads",
    "url": "https://web.archive.org/web/20170611135511/http://www.stratoscale.com/blog/openstack/tutorial-how-to-use-terraform-to-deploy-openstack-workloads/",
    "description": "Illustrates how easy it is to use the OpenStack Terraform provider to deploy a web server."
  },
  {
    "name": "Zero Downtime Updates with HashiCorp Terraform",
    "url": "https://www.hashicorp.com/blog/zero-downtime-updates-with-terraform",
    "description": "Ensuring zero downtime of your infrastructure."
  },
  {
    "name": "Google Cloud Platform for 10$ a month using terraform",
    "url": "https://github.com/nufailtd/terraform-budget-gcp",
    "description": "Shows how to use terraform to create a secure Google Kubernetes Cluster, Google Cloud Run Services and other infrastructure elements for less than 10$ a month."
  },
  {
    "name": "Infracost + Terraform + GitHub Actions = Automate Cloud Cost Management",
    "url": "https://betterprogramming.pub/infracost-terraform-github-actions-automate-cloud-cost-management-a62b329f2834?sk=495131c5831bc9276369150da5f3bc2c",
    "description": "How to use Infracost as the guardrail to manage cloud cost during Terraform development."
  },
  {
    "name": "How To Wrap Your Terraform Provider for Pulumi",
    "url": "https://www.speakeasyapi.dev/post/pulumi-terraform-provider",
    "description": "Making your terraform provider pulumi-ready"
  },
  {
    "name": "Terraform Design Patterns: the Terrafile",
    "url": "http://bensnape.com/2016/01/14/terraform-design-patterns-the-terrafile/",
    "description": "Managing Terraform modules and their versions within Terraform projects with Terrafile."
  },
  {
    "name": "Terraform, VPC, and why you want a tfstate file per env",
    "url": "https://charity.wtf/2016/03/30/terraform-vpc-and-why-you-want-a-tfstate-file-per-env/",
    "description": "Some gotchas surrounding using Terraform in large projects with multiple environments and how to avoid them."
  },
  {
    "name": "Using Pipelines to Manage Environments with Infrastructure as Code",
    "url": "https://medium.com/@kief/https-medium-com-kief-using-pipelines-to-manage-environments-with-infrastructure-as-code-b37285a1cbf5",
    "description": "Explains different approaches for building a pipeline to handle infrastructure changes moving from one environment to the next."
  },
  {
    "name": "Learning HashiCorp Terraform",
    "url": "https://web.archive.org/web/20201108000713/https://www.g10s.io/hashicorp-terraform/",
    "description": "Guide for Azure."
  },
  {
    "name": "New Terraform Azure Automation Resources",
    "url": "https://bgelens.nl/terraform-automation-resources/",
    "description": "Azure Automation."
  },
  {
    "name": "Terraforming Azure PaaS",
    "url": "https://devkimchi.com/2019/01/21/terraforming-azure-paas/",
    "description": "Deploy PaaS Resources on Azure."
  },
  {
    "name": "AWS Lambda the Terraform Way",
    "url": "https://github.com/nsriram/lambda-the-terraform-way",
    "description": "Understand AWS Lambda in-depth, beyond executing functions, using Terraform. Also includes guides for integration with S3, API Gateway, DynamoDB, Kinesis, SQS."
  },
  {
    "name": "Managing AWS Lambda Functions with Terraform",
    "url": "https://spacelift.io/blog/terraform-aws-lambda",
    "description": "What is AWS Lambda used for and how to use Terraform to manage AWS Lambda functions?"
  },
  {
    "name": "Managing infrastructure as code with Terraform, Cloud Build, and GitOps",
    "url": "https://cloud.google.com/architecture/managing-infrastructure-as-code",
    "description": "Setup and manage infrastructure as code with Terraform, Cloud Build, and GitOps."
  },
  {
    "name": "Getting started with Terraform on Google Cloud",
    "url": "https://cloud.google.com/community/tutorials/getting-started-on-gcp-with-terraform",
    "description": "Using Terraform to create a VM in Google Cloud and Starting a basic Python Flask server."
  },
  {
    "name": "Managing Cloud Infrastructure with Terraform",
    "url": "https://www.cloudskillsboost.google/quests/44",
    "description": "Deploy Kubernetes Load Balancer Service with Terraform, HTTPS Content-Based Load Balancer with Terraform, Modular Load Balancing with Terraform - Regional Load Balancer, Custom Providers with Terraform, Cloud SQL with Terraform, Building a VPN Between Google Cloud and AWS with Terraform."
  },
  {
    "name": "Hashicorp Terraform Tutorials for Google Cloud",
    "url": "https://learn.hashicorp.com/collections/terraform/gcp-get-started",
    "description": "Get started with Terraform on Google Cloud."
  },
  {
    "name": "Sharing data between Terraform configurations",
    "url": "https://jamesmckay.net/2016/09/sharing-data-between-terraform-configurations/",
    "description": "Illustrates how to use remote state to share data between Terraform configurations."
  },
  {
    "name": "The Segment AWS Stack",
    "url": "https://segment.com/blog/the-segment-aws-stack/",
    "description": "Shows the behind the scenes of the infrastructure powered by Terraform that solved The Million Dollar Engineering Problem at Segment."
  },
  {
    "name": "Top 3 Terraform Testing Strategies for Ultra-Reliable Infrastructure-as-Code",
    "url": "https://www.contino.io/insights/top-3-terraform-testing-strategies-for-ultra-reliable-infrastructure-as-code"
  },
  {
    "name": "Two Weeks with Terraform",
    "url": "https://charity.wtf/2016/02/23/two-weeks-with-terraform/",
    "description": "Some hard-earned experience from using Terraform in the wild, and some operational wisdom."
  },
  {
    "name": "Terraform: Beyond the Basics with AWS",
    "url": "https://aws.amazon.com/blogs/apn/terraform-beyond-the-basics-with-aws/",
    "description": "Explanation of a demo using Terraform to provision a sample AWS architecture."
  },
  {
    "name": "Terraform cost estimation",
    "url": "https://github.com/antonbabenko/terraform-cost-estimation",
    "description": "Anonymized, secure, and free Terraform cost estimation based on Terraform plan (0.12+) or Terraform state (any version)."
  },
  {
    "name": "How to Debug Terraform Projects: Tutorial",
    "url": "https://spacelift.io/blog/terraform-debug"
  },
  {
    "name": "rancher-terraform-digitalocean",
    "url": "https://github.com/lunagt/rancher-terraform-digitalocean",
    "description": "Rancher server on digitalocean."
  },
  {
    "name": "segmentio/stack",
    "url": "https://github.com/segmentio/stack",
    "description": "Configures production infrastructure with AWS, Docker, and ECS."
  },
  {
    "name": "terraform-aws-alb",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-alb",
    "description": "Creates Application load-balancer on AWS (verified module)."
  },
  {
    "name": "terraform-aws-appconfig",
    "url": "https://github.com/clowdhaus/terraform-aws-appconfig",
    "description": "Creates AWS AppConfig resources on AWS."
  },
  {
    "name": "terraform-aws-atlantis",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-atlantis",
    "description": "Creates Terraform configurations for running Atlantis on AWS Fargate. Github, Gitlab, and BitBucket are supported."
  },
  {
    "name": "terraform-aws-autoscaling",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-autoscaling",
    "description": "Creates Auto-Scaling Groups and Launch Configurations (verified module)."
  },
  {
    "name": "terraform-aws-customer-gateway",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-customer-gateway",
    "description": "Creates Customer Gateway on AWS."
  },
  {
    "name": "terraform-aws-datadog-forwarders",
    "url": "https://github.com/clowdhaus/terraform-aws-datadog-forwarders",
    "description": "Creates resources on AWS to forward logs/metrics to Datadog."
  },
  {
    "name": "terraform-aws-dms",
    "url": "https://github.com/clowdhaus/terraform-aws-dms",
    "description": "Creates AWS DMS (Database Migration Service) resources on AWS."
  },
  {
    "name": "terraform-aws-dynamodb-table",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-dynamodb-table",
    "description": "Creates DynamoDB table on AWS."
  },
  {
    "name": "terraform-aws-ec2-instance",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-ec2-instance",
    "description": "Creates EC2 instances on AWS."
  },
  {
    "name": "terraform-aws-ecr",
    "url": "https://github.com/cloudposse/terraform-aws-ecr",
    "description": "Manages Docker container registries on AWS ECR."
  },
  {
    "name": "terraform-aws-ecs",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-ecs",
    "description": "Creates AWS ECS resources on AWS."
  },
  {
    "name": "terraform-aws-efs",
    "url": "https://github.com/cloudposse/terraform-aws-efs",
    "description": "Defines an EFS Filesystem."
  },
  {
    "name": "terraform-aws-eks",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-eks",
    "description": "Creates Elastic Kubernetes Service on AWS (very popular module)."
  },
  {
    "name": "terraform-aws-elb",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-elb",
    "description": "Creates Elastic load-balancer on AWS (verified module)."
  },
  {
    "name": "terraform-aws-eventbridge",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-eventbridge",
    "description": "Creates EventBridge resources on AWS."
  },
  {
    "name": "terraform-aws-jenkins-ha-agents",
    "url": "https://github.com/neiman-marcus/terraform-aws-jenkins-ha-agents",
    "description": "EC2 Based Jenkins deployment with HA (spot) agents. Runs on EFS for immutability. Fully customizable, with sensible defaults."
  },
  {
    "name": "terraform-aws-jenkins",
    "url": "https://github.com/cloudposse/terraform-aws-jenkins",
    "description": "Build a Docker image with Jenkins, saves it to an ECR repo, and deploys it to Elastic Beanstalk running a Docker stack."
  },
  {
    "name": "terraform-aws-key-pair",
    "url": "https://github.com/cloudposse/terraform-aws-key-pair",
    "description": "Automatically Generate SSH Key Pairs (Public/Private Keys)."
  },
  {
    "name": "terraform-aws-lambda-auto-package",
    "url": "https://github.com/nozaq/terraform-aws-lambda-auto-package",
    "description": "A terraform module to define a lambda function which source files are automatically built and packaged for lambda deployment."
  },
  {
    "name": "terraform-aws-lambda",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-lambda",
    "description": "Terraform module, which builds dependencies and packages, and also creates AWS Lambda resources in countless combinations."
  },
  {
    "name": "terraform-aws-managed-service-prometheus",
    "url": "https://github.com/clowdhaus/terraform-aws-managed-service-prometheus",
    "description": "Creates AWS Managed Service for Prometheus (AMP) resources on AWS."
  },
  {
    "name": "terraform-aws-modules",
    "url": "https://github.com/terraform-aws-modules",
    "description": "Collection of Terraform AWS modules supported by the community (includes official AWS modules)."
  },
  {
    "name": "terraform-aws-msk-kafka-cluster",
    "url": "https://github.com/clowdhaus/terraform-aws-msk-kafka-cluster",
    "description": "Creates AWS MSK (Managed Streaming for Kafka) resources on AWS."
  },
  {
    "name": "terraform-aws-notify-slack",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-notify-slack",
    "description": "Creates SNS topic and Lambda function, which sends notifications to Slack."
  },
  {
    "name": "terraform-aws-postgresql-rds",
    "url": "https://github.com/azavea/terraform-aws-postgresql-rds",
    "description": "Creates PostgreSQL on RDS."
  },
  {
    "name": "terraform-aws-rds-aurora",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-rds-aurora",
    "description": "Creates RDS Aurora cluster resources on AWS (verified module)."
  },
  {
    "name": "terraform-aws-rds-proxy",
    "url": "https://github.com/clowdhaus/terraform-aws-rds-proxy",
    "description": "Creates AWS RDS Proxy resources on AWS."
  },
  {
    "name": "terraform-aws-rds",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-rds",
    "description": "Creates RDS resources on AWS (verified module)."
  },
  {
    "name": "terraform-aws-redshift",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-redshift",
    "description": "Creates Redshift resources on AWS."
  },
  {
    "name": "terraform-aws-route53",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-route53",
    "description": "Creates Route53 resources on AWS."
  },
  {
    "name": "terraform-aws-s3-bucket",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-s3-bucket",
    "description": "Creates S3 bucket resources on AWS."
  },
  {
    "name": "terraform-aws-secure-baseline",
    "url": "https://github.com/nozaq/terraform-aws-secure-baseline",
    "description": "Set up your AWS account with the secure baseline configuration based on CIS Amazon Web Services Foundations."
  },
  {
    "name": "terraform-aws-security-group",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-security-group",
    "description": "Creates EC2-VPC security groups on AWS (verified module)."
  },
  {
    "name": "terraform-aws-ssh-bastion-service",
    "url": "https://github.com/joshuamkite/terraform-aws-ssh-bastion-service",
    "description": "Terraform plan to deploy ssh bastion as a stateless service on AWS."
  },
  {
    "name": "terraform-aws-transit-gateway",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-transit-gateway",
    "description": "Creates Transit Gateway resources on AWS."
  },
  {
    "name": "terraform-aws-vpc",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-vpc",
    "description": "Creates VPC resources on AWS (verified and very popular module)."
  },
  {
    "name": "terraform-aws-vpn-gateway",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-vpn-gateway",
    "description": "Creates VPN gateway resources on AWS."
  },
  {
    "name": "terraform-azurerm-aks",
    "url": "https://github.com/kjanshair/terraform-azurerm-aks",
    "description": "Create AKS resources on Azure."
  },
  {
    "name": "terraform-azurerm-iis",
    "url": "https://github.com/ghostinthewires/terraform-azurerm-iis-install",
    "description": "Install IIS Server on Azure VM instance."
  },
  {
    "name": "terraform-azurerm-mysql",
    "url": "https://github.com/foreverXZC/terraform-azurerm-mysql",
    "description": "Create MySql Database on Azure."
  },
  {
    "name": "terraform-azurerm-redis",
    "url": "https://github.com/rahulkhengare/terraform-azurerm-redis",
    "description": "Create Redis on Azure."
  },
  {
    "name": "terraform-azurerm-sqlserver",
    "url": "https://github.com/metadevpro/terraform-azurerm-sqlserver-seed",
    "description": "Create SQl Server Database on Azure."
  },
  {
    "name": "terraform-cloudflare-maintenance",
    "url": "https://github.com/adinhodovic/terraform-cloudflare-maintenance",
    "description": "Module to create a Maintenance Page using Cloudflare Workers."
  },
  {
    "name": "terraform-digitalocean-droplet",
    "url": "https://registry.terraform.io/modules/terraform-digitalocean-modules/droplet/digitalocean",
    "description": "Terraform module for managing DigitalOcean Droplets and related resources."
  },
  {
    "name": "terraform-ecs-jenkins",
    "url": "https://github.com/shuaibiyy/terraform-ecs-jenkins",
    "description": "Provisions Jenkins on AWS ECS using Terraform."
  },
  {
    "name": "terraform-gce-atlantis",
    "url": "https://github.com/bschaatsbergen/terraform-gce-atlantis",
    "description": "Creates Terraform configurations for running Atlantis on Google Compute Engine."
  },
  {
    "name": "terraform-google-project-factory",
    "url": "https://github.com/terraform-google-modules/terraform-google-project-factory",
    "description": "Opinionated Google Cloud Platform project creation and configuration with Shared VPC, IAM, APIs, etc."
  },
  {
    "name": "terraform-kubestack",
    "url": "https://github.com/kbst/terraform-kubestack",
    "description": "Kubestack is a framework for Kubernetes platform engineering teams to define the entire cloud native stack in one Terraform code base and continuously evolve the platform safely through GitOps."
  },
  {
    "name": "terraform-linode-k8s",
    "url": "https://registry.terraform.io/modules/linode/k8s/linode/",
    "description": "Installs Kubernetes on Linode Instances."
  },
  {
    "name": "terraform-nixos",
    "url": "https://github.com/nix-community/terraform-nixos",
    "description": "A set of Terraform modules that are designed to deploy NixOS."
  },
  {
    "name": "terraform-static-website-s3-cloudfront",
    "url": "https://github.com/sjevs/terraform-static-website-s3-cloudfront",
    "description": "Creates static websites on AWS S3 & Cloudfront based on variables."
  },
  {
    "name": "tf_aws_bastion_s3_keys",
    "url": "https://github.com/terraform-community-modules/tf_aws_bastion_s3_keys",
    "description": "Creates bastion hosts on AWS EC2."
  },
  {
    "name": "typhoon",
    "url": "https://github.com/poseidon/typhoon",
    "description": "Minimal and free Kubernetes distribution with Terraform."
  },
  {
    "name": "anthology",
    "url": "https://github.com/erikvanbrakel/anthology",
    "description": "Private Terraform registry implementation as an alternative to the official registry."
  },
  {
    "name": "boring-registry",
    "url": "https://github.com/TierMobility/boring-registry",
    "description": "Private Terraform Module/Provider Registry with API key authentication and blob storage support"
  },
  {
    "name": "citizen",
    "url": "https://github.com/outsideris/citizen",
    "description": "Private Terraform Module/Provider Registry"
  },
  {
    "name": "nrkno/terraform-registry",
    "url": "https://github.com/nrkno/terraform-registry",
    "description": "A private Terraform registry with modular store backends."
  },
  {
    "name": "petra",
    "url": "https://github.com/devoteamgcloud/petra",
    "description": "Private Terraform Registry Manager"
  },
  {
    "name": "philips-labs/terraform-registry",
    "url": "https://github.com/philips-labs/terraform-registry",
    "description": "Terraform registry to serve arbitrary Terraform provider releases hosted on Github"
  },
  {
    "name": "tapir",
    "url": "https://github.com/PacoVK/tapir",
    "description": "Private Terraform Registry."
  },
  {
    "name": "terraform-simple-registry",
    "url": "https://github.com/apparentlymart/terraform-simple-registry",
    "description": "Simple implementation of the Terraform registry protocols."
  },
  {
    "name": "Terrareg",
    "url": "https://github.com/matthewjohn/terrareg",
    "description": "Terraform module registry."
  },
  {
    "name": "terustry",
    "url": "https://github.com/veepee-oss/terustry",
    "description": "Open Source terraform provider registry acting as a proxy for gitlab or github releases."
  },
  {
    "name": "terraform-provider-aws",
    "url": "https://github.com/hashicorp/terraform-provider-aws",
    "description": "Provider for Amazon Web Services."
  },
  {
    "name": "terraform-provider-azurerm",
    "url": "https://github.com/hashicorp/terraform-provider-azurerm",
    "description": "Provider for Azure."
  },
  {
    "name": "terraform-provider-docker",
    "url": "https://github.com/hashicorp/terraform-provider-docker",
    "description": "Provider for Docker."
  },
  {
    "name": "terraform-provider-google",
    "url": "https://github.com/hashicorp/terraform-provider-google",
    "description": "Provider for Google Cloud Platform."
  },
  {
    "name": "terraform-provider-helm",
    "url": "https://github.com/hashicorp/terraform-provider-helm",
    "description": "Provider for Helm."
  },
  {
    "name": "terraform-provider-kubernetes",
    "url": "https://github.com/hashicorp/terraform-provider-kubernetes",
    "description": "Provider for Kubernetes."
  },
  {
    "name": "terraform-provider-vsphere",
    "url": "https://github.com/hashicorp/terraform-provider-vsphere",
    "description": "Provider for VMware vSphere."
  },
  {
    "name": "terraform-provider-alicloud",
    "url": "https://github.com/aliyun/terraform-provider-alicloud",
    "description": "Provider for Alibaba Cloud."
  },
  {
    "name": "terraform-provider-artifactory",
    "url": "https://github.com/jfrog/terraform-provider-artifactory",
    "description": "Provider for JFrog Artifactory."
  },
  {
    "name": "terraform-provider-atlas",
    "url": "https://github.com/ariga/terraform-provider-atlas",
    "description": "Provider for Atlas."
  },
  {
    "name": "terraform-provider-azapi",
    "url": "https://github.com/Azure/terraform-provider-azapi",
    "description": "Provider for Azure Resource Manager Rest API"
  },
  {
    "name": "terraform-provider-azuredevops",
    "url": "https://github.com/microsoft/terraform-provider-azuredevops",
    "description": "Provider for Azure DevOps (VSTS)."
  },
  {
    "name": "terraform-provider-buildkite",
    "url": "https://github.com/buildkite/terraform-provider-buildkite",
    "description": "Provider for Buildkite."
  },
  {
    "name": "terraform-provider-checkly",
    "url": "https://github.com/checkly/terraform-provider-checkly",
    "description": "Manage Checkly resources for API & E2E monitoring."
  },
  {
    "name": "terraform-provider-confluent",
    "url": "https://github.com/confluentinc/terraform-provider-confluent",
    "description": "Provider for Confluent."
  },
  {
    "name": "terraform-provider-datadog",
    "url": "https://github.com/DataDog/terraform-provider-datadog",
    "description": "Provider for Datadog."
  },
  {
    "name": "terraform-provider-digitalocean",
    "url": "https://github.com/digitalocean/terraform-provider-digitalocean",
    "description": "Provider for DigitalOcean."
  },
  {
    "name": "terraform-provider-dominos",
    "url": "https://github.com/ndmckinley/terraform-provider-dominos",
    "description": "Provider for Dominos Pizza."
  },
  {
    "name": "terraform-provider-elasticstack",
    "url": "https://github.com/elastic/terraform-provider-elasticstack",
    "description": "Provider for Elasticsearch and Kibana."
  },
  {
    "name": "terraform-provider-env0",
    "url": "https://github.com/env0/terraform-provider-env0",
    "description": "Provider for env0"
  },
  {
    "name": "terraform-provider-github",
    "url": "https://github.com/integrations/terraform-provider-github",
    "description": "Provider for GitHub."
  },
  {
    "name": "terraform-provider-gitlab",
    "url": "https://github.com/gitlabhq/terraform-provider-gitlab",
    "description": "Provider for GitLab."
  },
  {
    "name": "terraform-provider-graphql",
    "url": "https://github.com/sullivtr/terraform-provider-graphql",
    "description": "Provider for GraphQL queries and mutations."
  },
  {
    "name": "terraform-provider-hcloud",
    "url": "https://github.com/hetznercloud/terraform-provider-hcloud",
    "description": "Provider for Hetzner Cloud."
  },
  {
    "name": "terraform-provider-healthchecksio",
    "url": "https://github.com/kristofferahl/terraform-provider-healthchecksio",
    "description": "Provider to manage healthchecks.io resources."
  },
  {
    "name": "terraform-provider-heroku",
    "url": "https://github.com/heroku/terraform-provider-heroku",
    "description": "Provider for Heroku."
  },
  {
    "name": "terraform-provider-ibm",
    "url": "https://github.com/IBM-Cloud/terraform-provider-ibm",
    "description": "Provider for IBM Cloud."
  },
  {
    "name": "terraform-provider-iterative",
    "url": "https://github.com/iterative/terraform-provider-iterative",
    "description": "Terraform plugin built with machine learning in mind."
  },
  {
    "name": "terraform-provider-k8s",
    "url": "https://github.com/banzaicloud/terraform-provider-k8s",
    "description": "Simple Kubernetes Provider, works with any manifest."
  },
  {
    "name": "terraform-provider-keycloak",
    "url": "https://github.com/mrparkers/terraform-provider-keycloak",
    "description": "Provider to manage the settings of your Keycloak identity provider server."
  },
  {
    "name": "terraform-provider-linode",
    "url": "https://github.com/btobolaski/terraform-provider-linode",
    "description": "Provider for Linode."
  },
  {
    "name": "terraform-provider-openstack",
    "url": "https://github.com/terraform-provider-openstack/terraform-provider-openstack",
    "description": "Plugin for OpenStack."
  },
  {
    "name": "terraform-provider-panos",
    "url": "https://github.com/PaloAltoNetworks/terraform-provider-panos",
    "description": "Provider for Palo Alto Networks next-generation firewalls."
  },
  {
    "name": "terraform-provider-pingdom",
    "url": "https://github.com/russellcardullo/terraform-provider-pingdom",
    "description": "Provider to manage Pingdom resources."
  },
  {
    "name": "terraform-provider-rancher2",
    "url": "https://github.com/rancher/terraform-provider-rancher2",
    "description": "Provider for Rancher v2."
  },
  {
    "name": "terraform-provider-scalr",
    "url": "https://github.com/Scalr/terraform-provider-scalr",
    "description": "Provider for Scalr"
  },
  {
    "name": "terraform-provider-secrethub",
    "url": "https://github.com/secrethub/terraform-provider-secrethub",
    "description": "Provider for SecretHub."
  },
  {
    "name": "terraform-provider-sigsci",
    "url": "https://github.com/signalsciences/terraform-provider-sigsci",
    "description": "Provider for Signal Sciences."
  },
  {
    "name": "terraform-provider-snowflake",
    "url": "https://github.com/chanzuckerberg/terraform-provider-snowflake",
    "description": "Provider for Snowflake data warehouse."
  },
  {
    "name": "terraform-provider-spinnaker",
    "url": "https://github.com/armory-io/terraform-provider-spinnaker",
    "description": "Provider for Spinnaker."
  },
  {
    "name": "terraform-provider-spotinst",
    "url": "https://github.com/spotinst/terraform-provider-spotinst",
    "description": "Provider for spotinst."
  },
  {
    "name": "terraform-provider-stripe",
    "url": "https://github.com/franckverrot/terraform-provider-stripe",
    "description": "Provider for Stripe."
  },
  {
    "name": "terraform-provider-ucloud",
    "url": "https://github.com/ucloud/terraform-provider-ucloud",
    "description": "Provider to manage UCloud resources."
  },
  {
    "name": "terraform-provider-uptimerobot",
    "url": "https://github.com/louy/terraform-provider-uptimerobot",
    "description": "Provider to manage uptimerobot resources."
  },
  {
    "name": "terraform-provider-vaulted",
    "url": "https://github.com/sumup-oss/terraform-provider-vaulted",
    "description": "Encrypted HashiCorp Vault secrets via Terraform that can be stored in SCM such as Git."
  },
  {
    "name": "terraform-provider-docker",
    "url": "https://github.com/kreuzwerker/terraform-provider-docker",
    "description": "Terraform Docker provider."
  },
  {
    "name": "terraform-provider-terracurl",
    "url": "https://github.com/devops-rob/terraform-provider-terracurl",
    "description": "Provider to make managed and unmanaged API calls to your target endpoint."
  },
  {
    "name": "terraform-provider-value",
    "url": "https://github.com/pseudo-dynamic/terraform-provider-value",
    "description": "Value Provider for Terraform."
  },
  {
    "name": "clarity",
    "url": "https://github.com/xchapter7x/clarity",
    "description": "A declarative test framework for Terraform for unit testing."
  },
  {
    "name": "kitchen-terraform",
    "url": "https://github.com/newcontext-oss/kitchen-terraform",
    "description": "Provides a set of Test Kitchen plugins which enable a system to use Test Kitchen to converge a Terraform configuration and verify the resulting Terraform state with InSpec controls."
  },
  {
    "name": "rspec-terraform",
    "url": "https://github.com/bsnape/rspec-terraform",
    "description": "RSpec tests for your Terraform modules."
  },
  {
    "name": "terraform_validate",
    "url": "https://github.com/elmundio87/terraform_validate",
    "description": "Assists in the enforcement of user-defined standards in Terraform."
  },
  {
    "name": "terraform-compliance",
    "url": "https://github.com/terraform-compliance/cli",
    "description": "BDD Testing for Terraform Files."
  },
  {
    "name": "terratest",
    "url": "https://github.com/gruntwork-io/terratest",
    "description": "Terratest is a Go library that makes it easier to write automated tests for your infrastructure code."
  },
  {
    "name": "AIaC",
    "url": "https://github.com/gofireflyio/aiac",
    "description": "Artificial Intelligence Infrastructure-as-Code Generator"
  },
  {
    "name": "AirIAM",
    "url": "https://github.com/bridgecrewio/AirIAM",
    "description": "AirIAM is a tool for AWS IAM to least privilege Terraform execution framework."
  },
  {
    "name": "Argonaut",
    "url": "https://argonaut.dev/",
    "description": "Deploy apps and infrastructure on your cloud in minutes. Autogenerate Terraform modules, customize configurations through PRs. Support for app deployments on Kubernetes and Lambda environments."
  },
  {
    "name": "astro",
    "url": "https://github.com/uber/astro/",
    "description": "Astro is a tool for managing multiple Terraform executions as a single command. 👻"
  },
  {
    "name": "atlantis",
    "url": "https://github.com/runatlantis/atlantis",
    "description": "Unified workflow for collaborating on Terraform through GitHub."
  },
  {
    "name": "atmos",
    "url": "https://github.com/cloudposse/atmos",
    "description": "A universal tool that converts deep merged YAML to module inputs. 👽"
  },
  {
    "name": "aws2tf",
    "url": "https://github.com/aws-samples/aws2tf",
    "description": "automates the importing of existing AWS resources into Terraform and outputs the Terraform HCL code."
  },
  {
    "name": "aztfexport",
    "url": "https://github.com/Azure/aztfexport",
    "description": "A tool to bring existing Azure resources under Terraform's management."
  },
  {
    "name": "balcony",
    "url": "https://oguzhan-yilmaz.github.io/balcony/",
    "description": "CLI tool for easy AWS API reads. Also generates Terraform import-blocks, and actual Terraform Resource code."
  },
  {
    "name": "blast radius",
    "url": "https://github.com/28mm/blast-radius",
    "description": "Interactive visualizations of Terraform dependency graphs. 💀"
  },
  {
    "name": "burrito",
    "url": "https://padok-team.github.io/burrito/",
    "description": "Burrito is a TACoS (Terraform Automation Collaboration Software) Kubernetes Operator."
  },
  {
    "name": "cfnctl",
    "url": "https://github.com/rogerwelin/cfnctl",
    "description": "Cfnctl brings the Terraform cli experience to AWS Cloudformation."
  },
  {
    "name": "Checkov",
    "url": "https://github.com/bridgecrewio/checkov/",
    "description": "Terraform static analysis tool for terraform>=0.12"
  },
  {
    "name": "Coder",
    "url": "https://coder.com/",
    "description": "Coder provisions software development environments on your infrastructure via Terraform."
  },
  {
    "name": "coretech/terrafile",
    "url": "https://github.com/coretech/terrafile",
    "description": "Systematically manage external modules from Github for use in Terraform (written in Go)."
  },
  {
    "name": "driftctl",
    "url": "https://github.com/snyk/driftctl",
    "description": "Detect, track, and alert on infrastructure drift"
  },
  {
    "name": "dxw/terrafile",
    "url": "https://github.com/dxw/terrafile",
    "description": "Systematically manage external modules from Github for use in Terraform (written in Ruby)."
  },
  {
    "name": "flora",
    "url": "https://github.com/ketchoop/flora",
    "description": "Terraform version manager."
  },
  {
    "name": "fogg",
    "url": "https://github.com/chanzuckerberg/fogg",
    "description": "A tool for eliminating toil in managing terraform repositories."
  },
  {
    "name": "former2",
    "url": "https://github.com/iann0036/former2",
    "description": "Generate terraform configuration from your existing resources within your AWS account."
  },
  {
    "name": "fuzzy-terraform-rm",
    "url": "https://github.com/paololazzari/fuzzy-terraform-rm",
    "description": "A fuzzy-finder command-line tool for removing resources from terraform state."
  },
  {
    "name": "gaia",
    "url": "https://github.com/gaia-app/gaia",
    "description": "Gaia is a Terraform 🌍 UI for your modules, and self-service infrastructure 👨‍💻."
  },
  {
    "name": "hatchet",
    "url": "https://docs.hatchet.run/",
    "description": "An all-in-one Terraform management tool."
  },
  {
    "name": "hcldump",
    "url": "https://github.com/magodo/hcldump",
    "description": "Dump the HCL (v2) abstract syntax tree."
  },
  {
    "name": "hcledit",
    "url": "https://github.com/minamijoyo/hcledit",
    "description": "A command line editor for HCL."
  },
  {
    "name": "hclgrep",
    "url": "https://github.com/magodo/hclgrep",
    "description": "Syntax based grep for HCL(v2)."
  },
  {
    "name": "iam-policy-json-to-terraform",
    "url": "https://github.com/flosell/iam-policy-json-to-terraform",
    "description": "Small tool to convert an IAM Policy in JSON format into a Terraform aws_iam_policy_document"
  },
  {
    "name": "Infracost",
    "url": "https://github.com/infracost/infracost",
    "description": "Cloud cost estimates for Terraform in your CLI and pull requests."
  },
  {
    "name": "inframap",
    "url": "https://github.com/cycloidio/inframap",
    "description": "Read your tfstate or HCL to generate a graph specific for each provider, showing only the resources that are most important/relevant."
  },
  {
    "name": "json2hcl",
    "url": "https://github.com/kvz/json2hcl",
    "description": "Convert JSON to HCL and vice versa. 👻"
  },
  {
    "name": "k2tf",
    "url": "https://github.com/sl1pm4t/k2tf",
    "description": "Kubernetes YAML to Terraform HCL converter."
  },
  {
    "name": "KICS",
    "url": "https://github.com/Checkmarx/kics",
    "description": "Scans IaC projects for security vulnerabilities, compliance issues, and infrastructure misconfiguration. Currently working with Terraform projects, Kubernetes manifests, Dockerfiles, AWS CloudFormation Templates, and Ansible playbooks."
  },
  {
    "name": "layerform",
    "url": "https://github.com/ergomake/layerform",
    "description": "Layerform helps engineers create reusable environment stacks using plain .tf files. Ideal for multiple \"staging\" environments."
  },
  {
    "name": "modules.tf-lambda",
    "url": "https://github.com/antonbabenko/modules.tf-lambda",
    "description": "Infrastructure as code generator from visual diagrams created with Cloudcraft.co to Terraform."
  },
  {
    "name": "para",
    "url": "https://github.com/paraterraform/para",
    "description": "The missing 3rd-party plugin manager and a \"Swiss army knife\" for Terraform/Terragrunt - just 1 tool to facilitate all workflows. 💀"
  },
  {
    "name": "pike",
    "url": "https://github.com/jamesWoolfenden/pike",
    "description": "Pike calculates the permissions or IAM policy required to build your Terraform."
  },
  {
    "name": "pluralith",
    "url": "https://www.pluralith.com/",
    "description": "Terraform state visualization and automated generation of infrastructure documentation. 💲"
  },
  {
    "name": "pre-commit-terraform",
    "url": "https://github.com/antonbabenko/pre-commit-terraform",
    "description": "pre-commit git hooks to take care of Terraform configurations (auto-format, validate, update docs)."
  },
  {
    "name": "pretf",
    "url": "https://github.com/raymondbutcher/pretf",
    "description": "drop-in Terraform wrapper that generates Terraform configuration with Python. See pretf documentation"
  },
  {
    "name": "prettyplan",
    "url": "https://github.com/chrislewisdev/prettyplan",
    "description": "Prettyplan (available online here) is a small tool to help you view large Terraform plans with ease. 👻"
  },
  {
    "name": "pytest-terraform",
    "url": "https://github.com/cloud-custodian/pytest-terraform",
    "description": "pytest terraform plugin with fixtures and offline replay support."
  },
  {
    "name": "python-terrafile",
    "url": "https://github.com/claranet/python-terrafile",
    "description": "Systematically manage external modules from Github for use in Terraform."
  },
  {
    "name": "regula",
    "url": "https://github.com/fugue/regula",
    "description": "Evaluates Terraform infrastructure-as-code for potential AWS, Azure, and Google Cloud security misconfigurations and compliance violations prior to deployment."
  },
  {
    "name": "renovate-config",
    "url": "https://github.com/SpotOnInc/renovate-config",
    "description": "Sharable Config Presets for Renovatebot, especially useful for DevOps folks."
  },
  {
    "name": "rover",
    "url": "https://github.com/im2nguyen/rover",
    "description": "Interactive Terraform state and configuration explorer."
  },
  {
    "name": "ruby-terraform",
    "url": "https://github.com/infrablocks/ruby_terraform",
    "description": "Simple Ruby wrapper for invoking terraform commands."
  },
  {
    "name": "sato",
    "url": "https://github.com/JamesWoolfenden/sato",
    "description": "Sato helps you convert your legacy Cloudformation into Terraform."
  },
  {
    "name": "scenery",
    "url": "https://github.com/dmlittle/scenery",
    "description": "Another Terraform plan output prettifier. 👻"
  },
  {
    "name": "scratchrelaxtv",
    "url": "https://github.com/YakDriver/scratchrelaxtv",
    "description": "Simple Python tool to help with module development - extract vars from main.tf to generate variables.tf and make module usage stub from variables.tf."
  },
  {
    "name": "serverless.tf - Doing serverless with Terraform",
    "url": "https://serverless.tf/",
    "description": "Doing serverless with Terraform - serverless.tf is an opinionated open-source framework for developing, building, deploying, and securing serverless applications and infrastructures on AWS using Terraform. Read more."
  },
  {
    "name": "Shisho",
    "url": "https://github.com/flatt-security/shisho",
    "description": "Lightweight static analyzer for Terraform."
  },
  {
    "name": "stacks",
    "url": "https://github.com/cisco-open/stacks",
    "description": "Stacks, the Terraform code pre-processor"
  },
  {
    "name": "Styra Declarative Authorization Service (DAS)",
    "url": "https://www.styra.com/terraform-cloud-config-management-with-styra-das-and-open-policy-agent",
    "description": "Provides a managed Open Policy Agent (OPA) platform for Application and Infrastructure use cases, including Terraform, Terraform Cloud, and Kubernetes. Enforce policy guardrails during development, in CI/CD pipelines, and at deploy time. Styra DAS Free provides multiple systems and users, policy impact analysis, decision logging and replay, and access to Styra's Terraform policy library."
  },
  {
    "name": "tads-boilerplate",
    "url": "https://github.com/Thomvaill/tads-boilerplate",
    "description": "The power of Ansible and Terraform + the simplicity of Docker Swarm = Infrastructure as Code and DevOps best practices."
  },
  {
    "name": "tau",
    "url": "https://github.com/avinor/tau",
    "description": "Tau is a thin wrapper on top of terraform to manage multiple deployments, dependencies, and secrets."
  },
  {
    "name": "terraboard",
    "url": "https://github.com/camptocamp/terraboard",
    "description": "Web dashboard to inspect Terraform States."
  },
  {
    "name": "terraboot",
    "url": "https://github.com/MastodonC/terraboot",
    "description": "DSL to generate a terraform configuration and run it."
  },
  {
    "name": "terracognita",
    "url": "https://github.com/cycloidio/terracognita",
    "description": "Reads from existing Cloud Providers (reverse Terraform) and generates your infrastructure as code on Terraform configuration."
  },
  {
    "name": "terracost",
    "url": "https://github.com/cycloidio/terracost",
    "description": "Cloud cost estimation for Terraform in your CLI."
  },
  {
    "name": "terracove",
    "url": "https://elementtech.github.io/terracove/",
    "description": "Recursively test a directory tree for Terraform diffs and coverage."
  },
  {
    "name": "TerraDepot",
    "url": "https://github.com/derBroBro/TerraDepot"
  },
  {
    "name": "terradozer",
    "url": "https://github.com/jckuester/terradozer",
    "description": "Terraform destroy without configuration files."
  },
  {
    "name": "terraeasy",
    "url": "https://github.com/jaceq/terraeasy",
    "description": "Easy Terraform wrapper"
  },
  {
    "name": "terraform-aws-clickops-notifier",
    "url": "https://github.com/cloudandthings/terraform-aws-clickops-notifier",
    "description": "Get notified when actions are taken in the AWS Console."
  },
  {
    "name": "terraform-bundle",
    "url": "https://github.com/hashicorp/terraform/tree/master/tools/terraform-bundle",
    "description": "Easily builds bundles containing a Terraform binary as well as provider binaries. Useful for CI and air-gapped Terraform Enterprise."
  },
  {
    "name": "terraform-cdk",
    "url": "https://github.com/hashicorp/terraform-cdk",
    "description": "CDK (Cloud Development Kit) for Terraform allows developers to use familiar programming languages to define cloud infrastructure and provision it through HashiCorp Terraform."
  },
  {
    "name": "terraform-cleaner",
    "url": "https://github.com/sylwit/terraform-cleaner",
    "description": "Tiny utility which detects unused variables in your terraform modules."
  },
  {
    "name": "terraform-credentials-vault",
    "url": "https://github.com/oulman/terraform-credentials-vault",
    "description": "A Terraform \"credentials helper\" plugin that allows providing credentials for Terraform-native services (private module registries, Terraform Cloud, etc) via environment variables."
  },
  {
    "name": "terraform-diff",
    "url": "https://github.com/contentful-labs/terraform-diff",
    "description": "Always know where you need to run Terraform plan & apply!"
  },
  {
    "name": "terraform-docs",
    "url": "https://github.com/terraform-docs/terraform-docs",
    "description": "Quick utility to generate docs from terraform modules."
  },
  {
    "name": "terraform-graph-beautifier",
    "url": "https://github.com/pcasteran/terraform-graph-beautifier",
    "description": "Command line tool allowing to convert the barely usable output of the terraform graph command to something more meaningful and explanatory."
  },
  {
    "name": "terraform-iam-policy-validator",
    "url": "https://github.com/awslabs/terraform-iam-policy-validator",
    "description": "CLI validates AWS IAM Policies in a Terraform template against AWS IAM best practices."
  },
  {
    "name": "terraform-landscape",
    "url": "https://github.com/coinbase/terraform-landscape",
    "description": "(only 0.11 and earlier) Improve Terraform's plan output to be easier to read and understand."
  },
  {
    "name": "terraform-operator",
    "url": "https://github.com/isaaguilar/terraform-operator.git",
    "description": "A Kubernetes CRD to handle Terraform operations."
  },
  {
    "name": "terraform-plan-parser",
    "url": "https://github.com/lifeomic/terraform-plan-parser",
    "description": "Command line utility and JavaScript API for parsing stdout from terraform plan and converting it to JSON. 👻"
  },
  {
    "name": "terraform-provisioner",
    "url": "https://github.com/shuaibiyy/terraform-provisioner",
    "description": "Tool for managing multiple provisions of the same Terraform scripts."
  },
  {
    "name": "terraform-rake-tasks",
    "url": "https://github.com/gina-alaska/terraform-rake-tasks",
    "description": "Shared Rake tasks for managing terraform plans."
  },
  {
    "name": "terraform-repl",
    "url": "https://github.com/paololazzari/terraform-repl",
    "description": "A terraform console wrapper for a better interactive console experience."
  },
  {
    "name": "Terraform-Visual",
    "url": "https://github.com/hieven/terraform-visual",
    "description": "A simple but powerful tool to visualize Terraform plan."
  },
  {
    "name": "terraform.py",
    "url": "https://github.com/ciscocloud/terraform.py",
    "description": "Ansible dynamic inventory script for parsing Terraform state files."
  },
  {
    "name": "terraformer",
    "url": "https://github.com/GoogleCloudPlatform/terraformer",
    "description": "CLI tool to generate terraform files from existing infrastructure. Infrastructure to Code. Supported many providers."
  },
  {
    "name": "terraforming",
    "url": "https://github.com/dtan4/terraforming",
    "description": "Export existing AWS resources to Terraform style (tf, tfstate). Similar to terraformer."
  },
  {
    "name": "terraformize",
    "url": "https://github.com/naorlivne/terraformize",
    "description": "Apply\\Destroy Terraform modules via a simple REST API endpoint."
  },
  {
    "name": "terraformsh",
    "url": "https://github.com/pwillis-els/terraformsh",
    "description": "A wrapper in Bash for easier CLI UX and DRY hierarchical configs"
  },
  {
    "name": "terragrunt-atlantis-config",
    "url": "https://github.com/transcend-io/terragrunt-atlantis-config",
    "description": "Generate Atlantis config for Terragrunt projects."
  },
  {
    "name": "terragrunt",
    "url": "https://github.com/gruntwork-io/terragrunt",
    "description": "Terragrunt is a thin wrapper for Terraform that provides extra tools for keeping your Terraform configurations DRY, working with multiple Terraform modules, and managing remote state."
  },
  {
    "name": "Terrahaxs",
    "url": "https://www.terrahaxs.com",
    "description": "A GitOps Terraform CI/CD GitHub Application 💲"
  },
  {
    "name": "terrahelp",
    "url": "https://github.com/opencredo/terrahelp",
    "description": "Command line utility aimed at providing supplementary functionality which can sometimes prove useful when working with Terraform."
  },
  {
    "name": "terrahub",
    "url": "https://github.com/TerraHubCorp/terrahub",
    "description": "TerraHub is terraform automation and orchestration tool. Seamlessly integrated into console.terrahub.io, enterprise friendly GUI to show realtime terraform executions, as well as auditing and reporting capabilities for historical terraform runs. 💲"
  },
  {
    "name": "terramagic",
    "url": "https://github.com/miltlima/terramagic",
    "description": "Wizard tool for create folders and terraform files automated, written in Python !"
  },
  {
    "name": "terramate",
    "url": "https://github.com/mineiros-io/terramate",
    "description": "Tool for managing multiple Terraform stacks that comes with support for change detection and code generation"
  },
  {
    "name": "terrap-cli",
    "url": "https://github.com/sirrend/terrap-cli",
    "description": "Terrap - a powerful CLI tool that scans your infrastructure and identifies any required changes."
  },
  {
    "name": "terrars",
    "url": "https://github.com/andrewbaxter/terrars",
    "description": "Terrars is a tool for building Terraform stacks in Rust. This is an alternative to the CDK."
  },
  {
    "name": "terrascan",
    "url": "https://github.com/accurics/terrascan",
    "description": "Collection of security and best practice test for static code analysis of terraform templates"
  },
  {
    "name": "terrascope",
    "url": "https://github.com/spilliams/terrascope",
    "description": "Build orchestrator for terraform monorepos."
  },
  {
    "name": "terrashine",
    "url": "https://isawan.github.io/terrashine/",
    "description": "Terrashine is a terraform provider mirror1 implementation that works by automatically caching dependencies as providers are requested."
  },
  {
    "name": "terraspace",
    "url": "https://terraspace.cloud",
    "description": "The Terraform Framework"
  },
  {
    "name": "terrastate",
    "url": "https://github.com/rohinivsenthil/terrastate",
    "description": "Visual Studio Code extension to monitor/deploy/destroy Terraform resources in your workspace"
  },
  {
    "name": "terratag",
    "url": "https://github.com/env0/terratag",
    "description": "Terratag is a CLI tool that enables users of Terraform to automatically create and maintain tags across their entire set of AWS, Azure, and GCP resources."
  },
  {
    "name": "tf-init-booster",
    "url": "https://github.com/hayorov/terraform-init-booster",
    "description": "A Pre-terraform routine that speedups terraform modules download for bulky blueprints."
  },
  {
    "name": "tf-profile",
    "url": "https://github.com/datarootsio/tf-profile/",
    "description": "Profiler for Terraform runs. Generate global stats, resource-level stats or visualizations."
  },
  {
    "name": "tf-summarize",
    "url": "https://github.com/dineshba/tf-summarize",
    "description": "A command-line utility to print the summary of the terraform plan"
  },
  {
    "name": "tfaction",
    "url": "https://github.com/suzuki-shunsuke/tfaction",
    "description": "GitHub Actions collection for Opinionated Terraform Workflow"
  },
  {
    "name": "tfautomv",
    "url": "https://github.com/padok-team/tfautomv",
    "description": "Generate Terraform moved blocks automatically for painless refactoring"
  },
  {
    "name": "tfcmt",
    "url": "https://github.com/suzuki-shunsuke/tfcmt",
    "description": "CLI to notify the result of plan and apply as Pull Request comment."
  },
  {
    "name": "tfedit",
    "url": "https://github.com/minamijoyo/tfedit",
    "description": "A refactoring tool for Terraform."
  },
  {
    "name": "tfenv",
    "url": "https://github.com/tfutils/tfenv",
    "description": "Terraform version manager inspired by rbenv."
  },
  {
    "name": "tfgen",
    "url": "https://github.com/refl3ction/tfgen",
    "description": "Terraform code generator for consistent codebase and DRY."
  },
  {
    "name": "tfgpt",
    "url": "https://github.com/flavius-dinu/tfgpt",
    "description": "A CLI tool that integrates Terraform with OpenAI's GPT-3.5 Turbo to provide explanations for Terraform commands and concepts."
  },
  {
    "name": "tfjson",
    "url": "https://github.com/palantir/tfjson",
    "description": "Utility to read in a Terraform plan file and dump it out in JSON. 💀"
  },
  {
    "name": "tflint",
    "url": "https://github.com/terraform-linters/tflint",
    "description": "Terraform linter for detecting errors that can not be detected by terraform plan"
  },
  {
    "name": "tfmake",
    "url": "https://github.com/tfmake/tfmake",
    "description": "Automating Terraform with the power of make."
  },
  {
    "name": "tfmask",
    "url": "https://github.com/cloudposse/tfmask",
    "description": "Terraform utility to mask select output from terraform plan and terraform apply"
  },
  {
    "name": "tfmigrate",
    "url": "https://github.com/minamijoyo/tfmigrate",
    "description": "A Terraform state migration tool for GitOps."
  },
  {
    "name": "tfmigrator",
    "url": "https://github.com/tfmigrator/cli",
    "description": "Go library and CLI to migrate Terraform Configuration and State"
  },
  {
    "name": "tfprovidercheck",
    "url": "https://github.com/suzuki-shunsuke/tfprovidercheck",
    "description": "CLI to prevent malicious Terraform Providers from being executed"
  },
  {
    "name": "tfproviderlint",
    "url": "https://github.com/bflad/tfproviderlint",
    "description": "Terraform Provider Lint Tool."
  },
  {
    "name": "tfrepl",
    "url": "https://github.com/ysoftwareab/tfrepl",
    "description": "A Terraform REPL, giving you a full shell experience. Readline based. No dependencies. Save config changes. History."
  },
  {
    "name": "tfscaffold",
    "url": "https://github.com/tfutils/tfscaffold",
    "description": "Framework for controlling multi-environment multi-component terraform-managed AWS infrastructure."
  },
  {
    "name": "tfschema",
    "url": "https://github.com/minamijoyo/tfschema",
    "description": "Schema inspector for Terraform providers."
  },
  {
    "name": "tfsec",
    "url": "https://github.com/aquasecurity/tfsec",
    "description": "Terraform static analysis tool that supports terraform <0.12 & >=0.12 & directly integrates with HCL parser for better results."
  },
  {
    "name": "tfsort",
    "url": "https://github.com/AlexNabokikh/tfsort",
    "description": "CLI utility to sort Terraform variables and outputs."
  },
  {
    "name": "tftarget",
    "url": "https://github.com/future-architect/tftarget",
    "description": "CLI Tool to do terraform xxx -target={...} interactively."
  },
  {
    "name": "tftree",
    "url": "https://github.com/busser/tftree",
    "description": "Display your Terraform module call stack in your terminal."
  },
  {
    "name": "tftui",
    "url": "https://github.com/idoavrah/terraform-tui",
    "description": "A textual user interface for Terraform state."
  },
  {
    "name": "tfupdate",
    "url": "https://github.com/minamijoyo/tfupdate",
    "description": "Update version constraints in your Terraform configurations."
  },
  {
    "name": "tfvar",
    "url": "https://github.com/shihanng/tfvar",
    "description": "tfvar scans your Terraform configurations or modules and extracts the variables into formats of your choice (tfvar, environment variables, etc.) for editing."
  },
  {
    "name": "tfvaultenv",
    "url": "https://github.com/oulman/tfvaultenv",
    "description": "tfvaultenv reads secrets from HashiCorp Vault and outputs environment variables for various Terraform providers with those secrets."
  },
  {
    "name": "tfwrapper",
    "url": "https://github.com/manheim/tfwrapper",
    "description": "Rubygem providing rake tasks for running Hashicorp Terraform sanely."
  },
  {
    "name": "tgf",
    "url": "https://github.com/coveo/tgf",
    "description": "Terragrunt frontend for executing Terragrunt/Terraform through Docker."
  },
  {
    "name": "tpm",
    "url": "https://github.com/Madh93/tpm",
    "description": "A package manager for Terraform providers."
  },
  {
    "name": "travelgrunt",
    "url": "https://github.com/ivanilves/travelgrunt",
    "description": "cd inside [mono]repos without fatigue!"
  },
  {
    "name": "validIaC",
    "url": "https://github.com/gofireflyio/validiac",
    "description": "ValidIaC combines the best open-source tools to help ensure Terraform best practices, hygiene & security."
  },
  {
    "name": "xterrafile",
    "url": "https://github.com/devopsmakers/xterrafile"
  },
  {
    "name": "yor",
    "url": "https://github.com/bridgecrewio/yor",
    "description": "Automatically tag and trace infrastructure as code frameworks (Terraform, Cloudformation, and Serverless)."
  },
  {
    "name": "Speakeasy",
    "url": "https://www.speakeasyapi.dev/",
    "description": "Generate a terraform provider from an OpenAPI specification."
  },
  {
    "name": "setup-terraform",
    "url": "https://github.com/hashicorp/setup-terraform",
    "description": "Sets up Terraform CLI in your GitHub Actions workflow."
  },
  {
    "name": "terraform-plan",
    "url": "https://github.com/cds-snc/terraform-plan",
    "description": "GitHub Action to run Terraform plan and add a comment with the changes."
  },
  {
    "name": "vscode-terraform-live-graph",
    "url": "https://github.com/adamiBs/vscode-terraform-live-graph",
    "description": "Terraform Live Graph Extension for Visual Studio Code is a plugin that allows you to generate a live Terraform graph as you code."
  },
  {
    "name": "nu_plugin_hcl",
    "url": "https://github.com/Yethal/nu_plugin_hcl",
    "description": "HCL parser plugin for Nushell"
  },
  {
    "name": "pyhcl",
    "url": "https://github.com/virtuald/pyhcl",
    "description": "HCL parser in Python"
  },
  {
    "name": "python-hcl2",
    "url": "https://github.com/amplify-education/python-hcl2/",
    "description": "HCL2 parser in Python"
  },
  {
    "name": "rhcl",
    "url": "https://github.com/winebarrel/rhcl",
    "description": "Pure Ruby HCL parser"
  },
  {
    "name": "Terraform Generator",
    "url": "https://github.com/sudokar/generator-tf-module",
    "description": "Scaffolding for a new terraform module or project with support of test frameworks (terratest and kitchen-terraform)"
  },
  {
    "name": "Terraform GitOps Framework",
    "url": "https://www.kubestack.com",
    "description": "Everything you need to build reliable automation for AKS, EKS, and GKE Kubernetes clusters in one free and open-source framework."
  },
  {
    "name": "terraform-enterprise-cli",
    "url": "https://github.com/skierkowski/terraform-enterprise-cli",
    "description": "Terraform Enterprise Command Line Interface."
  },
  {
    "name": "terraform-enterprise-client",
    "url": "https://github.com/skierkowski/terraform-enterprise-client",
    "description": "Terraform Enterprise API Ruby Client and Command Line tool."
  },
  {
    "name": "terraform-enterprise-migrator",
    "url": "https://github.com/silinternational/terraform-enterprise-migrator",
    "description": "Script for migrating Terraform Enterprise environments from Legacy to new version of Terraform Enterprise."
  },
  {
    "name": "tfe-state-explorer",
    "url": "https://github.com/segmentio/tfe-state-explorer",
    "description": "Simple shell for exploring remote terraform enterprise state, with autocomplete. 💀"
  },
  {
    "name": "Scalr",
    "url": "https://scalr.com",
    "description": "Alternative to Terraform Enterprise with OPA integration, organizational structure, custom hooks, native integrations with other DevOps platforms, and centralized reporting.  💲"
  },
  {
    "name": "env0",
    "url": "https://env0.com",
    "description": "Alternative to Terraform Cloud/Enterprise with OPA integration, custom flows and Terragrunt support 💲"
  },
  {
    "name": "Brainboard",
    "url": "https://www.brainboard.co",
    "description": "Visually Design, Deploy & Manage modern cloud infrastructures starting from any Cloud Provider - AWS, GCP, Azure 💲"
  },
  {
    "name": "OTF",
    "url": "https://github.com/leg100/otf",
    "description": "Open Terraforming Framework, an open source alternative to Terraform Enterprise with full Terraform CLI integration."
  },
  {
    "name": "Terrakube",
    "url": "https://docs.terrakube.io",
    "description": "Open Source alternative to Terraform Enterprise with private registry, remote state, custom flows, scheduled workspaces, and visual states."
  },
  {
    "name": "Spacelift",
    "url": "https://spacelift.io/",
    "description": "Alternative to Terraform Cloud/Enterprise. Collaborative Infrastructure Delivery Platform for Terraform 💲"
  },
  {
    "name": "Terrateam",
    "url": "https://terrateam.io",
    "description": "Terraform GitOps with cost estimation, static analysis, access controls, drift detection, and custom workflows. 💲"
  },
  {
    "name": "Digger",
    "url": "https://digger.dev",
    "description": "Open Source Alternative to Terraform Cloud - Run Terraform plan & apply jobs in your CI."
  },
  {
    "name": "cloud-concierge",
    "url": "https://github.com/dragondrop-cloud/cloud-concierge",
    "description": "Open Source, codify unmanaged resources as Terraform, detect drift, and cloud cost and security analysis, delivered as a Pull Request."
  },
  {
    "name": "Stack-Lifecycle-Deployment",
    "url": "https://github.com/D10S0VSkY-OSS/Stack-Lifecycle-Deployment",
    "description": "OpenSource solution that defines and manages the complete lifecycle of resources used and provisioned into a cloud."
  },
  {
    "name": "Your Weekly Dose of Terraform",
    "url": "https://bit.ly/terraform-youtube",
    "description": "YouTube channel with weekly live streams covering Terraform news, reviews, interviews, Q&A, live coding, and some hacking with Terraform."
  },
  {
    "name": "Terraform explained in 15 mins",
    "url": "https://www.youtube.com/watch?v=l5k1ai_GBDE",
    "description": "Terraform explained in 15 mins."
  },
  {
    "name": "Terraform Course",
    "url": "https://www.youtube.com/watch?v=SLB_c_ayRMo",
    "description": "Automate your AWS cloud infrastructure."
  },
  {
    "name": "How to Build Reusable, Composable, Battle tested Terraform Modules",
    "url": "https://www.youtube.com/watch?v=LVgP63BkhKQ",
    "description": "Yevgeniy Brikman talks about how to write Terraform code so that it is reusable, composable and testable. The presentation focuses on Terraform modules but also provides a brief and clear explanation of what problem Terraform was created to solve and a short demo of Terraform basics (~39 min, October 2017)."
  },
  {
    "name": "Building Scalable, Repeatable Infrastructure in the Cloud with Terraform",
    "url": "https://www.youtube.com/watch?v=cG7pcksTAnY",
    "description": "Demonstrates how Terraform enables the practice of Infrastructure as Code by deploying TeamCity in AWS using a hosted PostgreSQL."
  },
  {
    "name": "Creating a Google Compute Instance with Terraform",
    "url": "https://www.youtube.com/watch?v=fo3VX33Zx0c",
    "description": "Example of creating a Google Compute Instance with Terraform code."
  },
  {
    "name": "Creating a Terraform Provider for Just About Anything",
    "url": "https://www.hashicorp.com/resources/creating-terraform-provider-for-anything",
    "description": "Learn how to contribute to a Terraform provider or create your own from this walkthrough."
  },
  {
    "name": "Evolving Your Infrastructure with Terraform",
    "url": "https://www.youtube.com/watch?v=wgzgVm7Sqlk",
    "description": "CTO of OpenCredo provides an extensive look at using Terraform in the real-world with the help of some interesting use-cases."
  },
  {
    "name": "Going Multi-Cloud with Terraform and Nomad",
    "url": "https://www.youtube.com/watch?v=e42A4aBZUkQ"
  },
  {
    "name": "How to Extend the Terraform Provider List",
    "url": "https://www.youtube.com/watch?v=2BvpqmFpchI",
    "description": "In this talk, Paul will walk through the creation of a terraform provider."
  },
  {
    "name": "Orchestrating Containers with Terraform and Consul",
    "url": "https://www.infoq.com/presentations/terraform-consul",
    "description": "Mitchell Hashimoto shows how Terraform can be used to deploy and scale containerized workloads."
  },
  {
    "name": "Production ChaosMonkey with Terraform",
    "url": "https://www.youtube.com/watch?v=CPI6W3LK0-g",
    "description": "How DigitalOcean uses Terraform to run production integration tests."
  },
  {
    "name": "Running a Terraform Environment at Scale",
    "url": "https://www.youtube.com/watch?v=3JVGSq7QIS0",
    "description": "Running Terraform at scale with hundreds of AWS accounts."
  },
  {
    "name": "Setup Continuous Integration for a Terraform module",
    "url": "https://www.youtube.com/watch?v=vuJ6bjYKUcA",
    "description": "Example of using CI with Kitchen-Terraform to test, tag and publish our Terraform module, which creates a Google Compute Instance."
  },
  {
    "name": "State of Terraform Providerland",
    "url": "https://www.youtube.com/watch?v=ar1PF5iDtbg",
    "description": "How Terraform providers work and how to write one."
  },
  {
    "name": "Terraform At Scale",
    "url": "https://www.youtube.com/watch?v=RldRDryLiXs",
    "description": "How Segment uses Terraform."
  },
  {
    "name": "Terraform w/ Lee Trout",
    "url": "https://www.youtube.com/watch?v=p2ESyuqPw1A",
    "description": "Focuses on development patterns and how to effectively structure Terraform code."
  },
  {
    "name": "Terraforming the Composable World",
    "url": "https://www.youtube.com/watch?v=cHrOXPatFeg",
    "description": "Integrating Terraform with an on-premise bare metal provisioning."
  },
  {
    "name": "Test and verify a Google Compute Instance with Kitchen-Terraform",
    "url": "https://www.youtube.com/watch?v=kiH3-LEveek",
    "description": "Example of using Kitchen-Terraform to test our Terraform code that creates a Google Compute."
  },
  {
    "name": "Untangling Terraform Through Refactoring",
    "url": "https://www.youtube.com/watch?v=OH6iDKaXpZs",
    "description": "How to refactor your Terraform code in a careful way with minimum risk."
  },
  {
    "name": "Complete Terraform Course - From BEGINNER to PRO! (Learn Infrastructure as Code)",
    "url": "https://www.youtube.com/watch?v=7xngnjfIlK4",
    "description": "From BEGINNER to PRO! (Learn Infrastructure as Code) - Complete course from beginner to pro, with no cloud provider focus, with a general approach"
  },
  {
    "name": "Atom terraform-lookup",
    "url": "https://atom.io/packages/terraform-lookup"
  },
  {
    "name": "Emacs terraform-mode",
    "url": "https://github.com/syohex/emacs-terraform-mode"
  },
  {
    "name": "Intellij",
    "url": "https://plugins.jetbrains.com/plugin/7808-hashicorp-terraform--hcl-language-support"
  },
  {
    "name": "Terraform-ls",
    "url": "https://github.com/hashicorp/terraform-ls"
  },
  {
    "name": "Terraform-lsp",
    "url": "https://github.com/juliosueiras/terraform-lsp"
  },
  {
    "name": "Vim-Terraform",
    "url": "https://github.com/hashivim/vim-terraform"
  },
  {
    "name": "Vim-Terraform-Completion",
    "url": "https://github.com/juliosueiras/vim-terraform-completion"
  },
  {
    "name": "VS Code",
    "url": "https://marketplace.visualstudio.com/items?itemName=mauve.terraform"
  }
]