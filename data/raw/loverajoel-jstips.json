[
  {
    "name": "Official Blog",
    "url": "http://www.jstips.co"
  },
  {
    "name": "Official Twitter Account",
    "url": "https://twitter.com/tips_js"
  },
  {
    "name": "Hubot",
    "url": "https://github.com/dggriffin/hubot-jstips"
  },
  {
    "name": "Slackbot",
    "url": "https://github.com/radibit/js-tips-slack-bot"
  },
  {
    "name": "iOS App",
    "url": "https://goo.gl/Y9WiBc"
  },
  {
    "name": "Check the reason make your page re-render by changed props and state",
    "url": "http://www.jstips.co/en/react/trace-the-reason-make-your-page-rerender/",
    "description": "Check the reason make your page re-render by changed props and state"
  },
  {
    "name": "Hash maps without side effects",
    "url": "http://www.jstips.co/en/javascript/hash-maps-without-side-effects/",
    "description": "Hash maps without side effects"
  },
  {
    "name": "Adventurers Guide to React (Part I)",
    "url": "http://www.jstips.co/en/react/adventurers-guide-to-react/",
    "description": "Adventurers Guide to React (Part I)"
  },
  {
    "name": "VueJS, How VueJS makes a copy-update-replace inside the data binding",
    "url": "http://www.jstips.co/en/more/vuejs-how-vuejs-makes-a-copy-update-replace-inside-the-data-binding/",
    "description": "VueJS, How VueJS makes a copy-update-replace inside the data binding"
  },
  {
    "name": "Picking and rejecting object properties",
    "url": "http://www.jstips.co/en/javascript/picking-and-rejecting-object-properties/",
    "description": "Picking and rejecting object properties"
  },
  {
    "name": "Enhancing React components, Composition",
    "url": "http://www.jstips.co/en/react/enhancing-react-components-composition/",
    "description": "Enhancing React components, Composition"
  },
  {
    "name": "Why you should use Object.is() in equality comparison",
    "url": "http://www.jstips.co/en/javascript/why-you-should-use-Object.is()-in-equality-comparison/",
    "description": "Why you should use Object.is() in equality comparison"
  },
  {
    "name": "Recursion, iteration and tail calls in JS",
    "url": "http://www.jstips.co/en/javascript/recursion-iteration-and-tail-calls-in-js/",
    "description": "Recursion, iteration and tail calls in JS"
  },
  {
    "name": "State to Props maps with memory",
    "url": "http://www.jstips.co/en/react/state-to-props-maps-with-memory/",
    "description": "State to Props maps with memory"
  },
  {
    "name": "Tapping for quick debugging",
    "url": "http://www.jstips.co/en/javascript/tapping-for-quick-debugging/",
    "description": "Tapping for quick debugging"
  },
  {
    "name": "3 Array Hacks",
    "url": "http://www.jstips.co/en/javascript/3-array-hacks/",
    "description": "3 Array Hacks"
  },
  {
    "name": "Working With Websocket Timeout",
    "url": "http://www.jstips.co/en/javascript/working-with-websocket-timeout/",
    "description": "Working With Websocket Timeout"
  },
  {
    "name": "Preventing Unwanted Scopes Creation in AngularJs",
    "url": "http://www.jstips.co/en/angular/preventing-unwanted-scopes-creation-in-angularjs/",
    "description": "Preventing Unwanted Scopes Creation in AngularJs"
  },
  {
    "name": "Binding objects to functions",
    "url": "http://www.jstips.co/en/javascript/binding-objects-to-functions/",
    "description": "Binding objects to functions"
  },
  {
    "name": "Three useful hacks",
    "url": "http://www.jstips.co/en/javascript/three-useful-hacks/",
    "description": "Three useful hacks"
  },
  {
    "name": "ES6, var vs let",
    "url": "http://www.jstips.co/en/javascript/keyword-var-vs-let/",
    "description": "ES6, var vs let"
  },
  {
    "name": "Breaking or continuing loop in functional programming",
    "url": "http://www.jstips.co/en/javascript/break-continue-loop-functional/",
    "description": "Breaking or continuing loop in functional programming"
  },
  {
    "name": "Comma operator in JS",
    "url": "http://www.jstips.co/en/javascript/comma-operaton-in-js/",
    "description": "Comma operator in JS"
  },
  {
    "name": "Copy to Clipboard",
    "url": "http://www.jstips.co/en/javascript/copy-to-clipboard/",
    "description": "Copy to Clipboard"
  },
  {
    "name": "Create an easy loop using an array",
    "url": "http://www.jstips.co/en/javascript/make-easy-loop-on-array/",
    "description": "Create an easy loop using an array"
  },
  {
    "name": "How to use optional arguments in functions (with optional callback)",
    "url": "http://www.jstips.co/en/javascript/use-optional-arguments/",
    "description": "How to use optional arguments in functions (with optional callback)"
  },
  {
    "name": "Get File Extension",
    "url": "http://www.jstips.co/en/javascript/get-file-extension/",
    "description": "Get File Extension"
  },
  {
    "name": "Return Values with the 'new' Operator",
    "url": "http://www.jstips.co/en/javascript/return-values-with-the-new-operator/",
    "description": "Return Values with the 'new' Operator"
  },
  {
    "name": "DOM event listening made easy",
    "url": "http://www.jstips.co/en/javascript/DOM-event-listening-made-easy/",
    "description": "DOM event listening made easy"
  },
  {
    "name": "Helpful Console Logging Tricks",
    "url": "http://www.jstips.co/en/javascript/helpful-console-log-hacks/",
    "description": "Helpful Console Logging Tricks"
  },
  {
    "name": "Easiest way to extract Unix timestamps",
    "url": "http://www.jstips.co/en/javascript/extract-unix-timestamp-easily/",
    "description": "Easiest way to extract Unix timestamps"
  },
  {
    "name": "Reduce builtin function usage",
    "url": "http://www.jstips.co/en/javascript/reminders-about-reduce-function-usage/",
    "description": "Reduce builtin function usage"
  },
  {
    "name": "Basics: Declarations",
    "url": "http://www.jstips.co/en/javascript/basics-declarations/",
    "description": "Basics: Declarations"
  },
  {
    "name": "Detect document ready in pure JS",
    "url": "http://www.jstips.co/en/javascript/detect-document-ready-in-pure-js/",
    "description": "Detect document ready in pure JS"
  },
  {
    "name": "Calculate the Max/Min value from an array",
    "url": "http://www.jstips.co/en/javascript/calculate-the-max-min-value-from-an-array/",
    "description": "Calculate the Max/Min value from an array"
  },
  {
    "name": "Know the passing mechanism",
    "url": "http://www.jstips.co/en/javascript/know-the-passing-mechanism/",
    "description": "Know the passing mechanism"
  },
  {
    "name": "Use destructuring in function parameters",
    "url": "http://www.jstips.co/en/javascript/use-destructuring-in-function-parameters/",
    "description": "Use destructuring in function parameters"
  },
  {
    "name": "Preventing Unapply Attacks",
    "url": "http://www.jstips.co/en/javascript/preventing-unapply-attacks/",
    "description": "Preventing Unapply Attacks"
  },
  {
    "name": "Array average and median",
    "url": "http://www.jstips.co/en/javascript/array-average-and-median/",
    "description": "Array average and median"
  },
  {
    "name": "Using JSON.stringify",
    "url": "http://www.jstips.co/en/javascript/using-json-stringify/",
    "description": "Using JSON.stringify"
  },
  {
    "name": "Advanced Properties",
    "url": "http://www.jstips.co/en/javascript/advanced-properties/",
    "description": "Advanced Properties"
  },
  {
    "name": "Flattening multidimensional Arrays",
    "url": "http://www.jstips.co/en/javascript/flattening-multidimensional-arrays-in-javascript/",
    "description": "Flattening multidimensional Arrays"
  },
  {
    "name": "Deduplicate an Array",
    "url": "http://www.jstips.co/en/javascript/deduplicate-an-array/",
    "description": "Deduplicate an Array"
  },
  {
    "name": "Observe DOM changes in extensions",
    "url": "http://www.jstips.co/en/javascript/observe-dom-changes/",
    "description": "Observe DOM changes in extensions"
  },
  {
    "name": "Assignment Operators",
    "url": "http://www.jstips.co/en/javascript/assignment-shorthands/",
    "description": "Assignment Operators"
  },
  {
    "name": "Implementing asynchronous loop",
    "url": "http://www.jstips.co/en/javascript/implementing-asynchronous-loops/",
    "description": "Implementing asynchronous loop"
  },
  {
    "name": "Create Range 0...N easily using one line",
    "url": "http://www.jstips.co/en/javascript/create-range-0-n-easily-using-one-line/",
    "description": "Create Range 0...N easily using one line"
  },
  {
    "name": "Map() to the rescue: adding order to Object properties",
    "url": "http://www.jstips.co/en/javascript/map-to-the-rescue-adding-order-to-object-properties/",
    "description": "Map() to the rescue: adding order to Object properties"
  },
  {
    "name": "Avoid modifying or passing arguments into other functions — it kills optimization",
    "url": "http://www.jstips.co/en/javascript/avoid-modifying-or-passing-arguments-into-other-functions-it-kills-optimization/",
    "description": "Avoid modifying or passing arguments into other functions — it kills optimization"
  },
  {
    "name": "Converting truthy/falsy values to boolean",
    "url": "http://www.jstips.co/en/javascript/converting-truthy-falsy-values-to-boolean/",
    "description": "Converting truthy/falsy values to boolean"
  },
  {
    "name": "Speed up recursive functions with memoization",
    "url": "http://www.jstips.co/en/javascript/speed-up-recursive-functions-with-memoization/",
    "description": "Speed up recursive functions with memoization"
  },
  {
    "name": "Currying vs partial application",
    "url": "http://www.jstips.co/en/javascript/curry-vs-partial-application/",
    "description": "Currying vs partial application"
  },
  {
    "name": "Short circuit evaluation",
    "url": "http://www.jstips.co/en/javascript/short-circuit-evaluation-in-js/",
    "description": "Short circuit evaluation"
  },
  {
    "name": "Filtering and sorting a list of Strings",
    "url": "http://www.jstips.co/en/javascript/filtering-and-sorting-a-list-of-strings/",
    "description": "Filtering and sorting a list of Strings"
  },
  {
    "name": "Using immediately invoked function expression",
    "url": "http://www.jstips.co/en/javascript/Using-immediately-invoked-function-expression/",
    "description": "Using immediately invoked function expression"
  },
  {
    "name": "Use === instead of ==",
    "url": "http://www.jstips.co/en/javascript/use_===_instead_of_==/",
    "description": "Use === instead of =="
  },
  {
    "name": "Converting to number fast way",
    "url": "http://www.jstips.co/en/javascript/converting-to-number-fast-way/",
    "description": "Converting to number fast way"
  },
  {
    "name": "Empty an Array",
    "url": "http://www.jstips.co/en/javascript/two-ways-to-empty-an-array/",
    "description": "Empty an Array"
  },
  {
    "name": "Shuffle an Array",
    "url": "http://www.jstips.co/en/javascript/shuffle-an-array/",
    "description": "Shuffle an Array"
  },
  {
    "name": "Return objects to enable chaining of functions",
    "url": "http://www.jstips.co/en/javascript/return-objects-to-enable-chaining-of-functions/",
    "description": "Return objects to enable chaining of functions"
  },
  {
    "name": "Safe String concatenation",
    "url": "http://www.jstips.co/en/javascript/safe-string-concatenation/",
    "description": "Safe String concatenation"
  },
  {
    "name": "Truncating the fast (but risky) way",
    "url": "http://www.jstips.co/en/javascript/rounding-the-fast-way/",
    "description": "Truncating the fast (but risky) way"
  },
  {
    "name": "Node.js: Run a module if it is not \"required\"",
    "url": "http://www.jstips.co/en/javascript/nodejs-run-a-module-if-it-is-not-required/",
    "description": "Node.js: Run a module if it is not \"required\""
  },
  {
    "name": "Passing arguments to callback functions",
    "url": "http://www.jstips.co/en/javascript/passing-arguments-to-callback-functions/",
    "description": "Passing arguments to callback functions"
  },
  {
    "name": "Even simpler way of using indexOf as a contains clause",
    "url": "http://www.jstips.co/en/javascript/even-simpler-way-of-using-indexof-as-a-contains-clause/",
    "description": "Even simpler way of using indexOf as a contains clause"
  },
  {
    "name": "Fat Arrow Functions #ES6",
    "url": "http://www.jstips.co/en/javascript/fat-arrow-functions/",
    "description": "Fat Arrow Functions #ES6"
  },
  {
    "name": "Measure performance of a code block",
    "url": "http://www.jstips.co/en/javascript/tip-to-measure-performance-of-a-javascript-block/",
    "description": "Measure performance of a code block"
  },
  {
    "name": "Pseudomandatory parameters in ES6 functions #ES6",
    "url": "http://www.jstips.co/en/javascript/pseudomandatory-parameters-in-es6-functions/",
    "description": "Pseudomandatory parameters in ES6 functions #ES6"
  },
  {
    "name": "Hoisting",
    "url": "http://www.jstips.co/en/javascript/hoisting/",
    "description": "Hoisting"
  },
  {
    "name": "Check if a property is in an Object",
    "url": "http://www.jstips.co/en/javascript/check-if-a-property-is-in-a-object/",
    "description": "Check if a property is in an Object"
  },
  {
    "name": "Template Strings",
    "url": "http://www.jstips.co/en/javascript/template-strings/",
    "description": "Template Strings"
  },
  {
    "name": "Converting a Node List to an Array",
    "url": "http://www.jstips.co/en/javascript/converting-a-node-list-to-an-array/",
    "description": "Converting a Node List to an Array"
  },
  {
    "name": "\"use strict\" and get lazy",
    "url": "http://www.jstips.co/en/javascript/use-strict-and-get-lazy/",
    "description": "\"use strict\" and get lazy"
  },
  {
    "name": "Writing a single method for arrays and a single element",
    "url": "http://www.jstips.co/en/javascript/writing-a-single-method-for-arrays-and-a-single-element/",
    "description": "Writing a single method for arrays and a single element"
  },
  {
    "name": "Differences between undefined and null",
    "url": "http://www.jstips.co/en/javascript/differences-between-undefined-and-null/",
    "description": "Differences between undefined and null"
  },
  {
    "name": "Sorting Strings with accented characters",
    "url": "http://www.jstips.co/en/javascript/sorting-strings-with-accented-characters/",
    "description": "Sorting Strings with accented characters"
  },
  {
    "name": "Improve Nested Conditionals",
    "url": "http://www.jstips.co/en/javascript/improve-nested-conditionals/",
    "description": "Improve Nested Conditionals"
  },
  {
    "name": "ReactJS - Keys in children components are important",
    "url": "http://www.jstips.co/en/react/keys-in-children-components-are-important/",
    "description": "ReactJS - Keys in children components are important"
  },
  {
    "name": "AngularJS: $digest vs $apply",
    "url": "http://www.jstips.co/en/angular/angularjs-digest-vs-apply/",
    "description": "AngularJS: $digest vs $apply"
  },
  {
    "name": "Insert item inside an Array",
    "url": "http://www.jstips.co/en/javascript/insert-item-inside-an-array/",
    "description": "Insert item inside an Array"
  }
]